services:
  db:
    image: neo4j:5.23-community
    env_file:
      - .env
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_server_config_strict__validation_enabled=false
    volumes:
      - neo4j:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-fake_password}", "RETURN 1;"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c "./prestart.sh && uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      PYTHONPATH: /app
      NEO4J_URI: bolt://db:7687
      NEO4J_HOST: db
      NEO4J_USER: ${NEO4J_USER:-neo4j}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-fake_password}
      WAIT_HOSTS: db:7687
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api

volumes:
  neo4j: {}
  neo4j_logs: {}
  neo4j_import: {}
  neo4j_plugins: {}
